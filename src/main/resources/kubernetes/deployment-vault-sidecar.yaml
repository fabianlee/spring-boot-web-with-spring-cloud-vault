#
# Used as template for sidecar injection with HashiCorp Vault for secret access
#
#export app=spring-boot-web-vault
#export namespace_k8s=vault
#export service_account_k8s=vault-auth
#export vault_uri=http://localhost:8200
#export vault_auth_path=auth/kubernetes
#export vault_role=myrole
#export vault_backend=secret; export vault_context=webapp; export vault_profile=config
#
# generate:
# cat deployment-vault-sidecar.yaml | DOLLAR_SIGN='$' envsubst | kubectl apply -f -
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $app
  namespace: $namespace_k8s
  labels:
    app: $app
spec:
  selector:
    matchLabels:
      app: $app
  replicas: 1
  template:
    metadata:
      labels:
        app: $app
      annotations:
        #sidecar.istio.io/inject: "true"

        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/agent-init-first: 'false'
        vault.hashicorp.com/agent-cache-enable: 'true'
        vault.hashicorp.com/auth-type: 'kubernetes'
        vault.hashicorp.com/auth-config-path: '/var/run/secrets/kubernetes.io/serviceaccount/token'
        vault.hashicorp.com/remove-jwt-after-reading : 'false'
        vault.hashicorp.com/auth-path: $vault_auth_path
        vault.hashicorp.com/role: $vault_role
        #vault.hashicorp.com/namespace: $namespace_vault # only available to Vault Enterprise

        # https://developer.hashicorp.com/vault/tutorials/kubernetes/kubernetes-sidecar#inject-secrets-into-the-pod
        vault.hashicorp.com/agent-inject-secret-mysecret: $vault_backend/$vault_context/$vault_profile
        vault.hashicorp.com/agent-inject-file-mysecret: mysecret.dump
        
        # embed into filesystem of container
        vault.hashicorp.com/agent-inject-template-mysecret.properties: |
          {{- with secret "$vault_backend/$vault_context/$vault_profile" -}}
          {{- range ${DOLLAR_SIGN}k, ${DOLLAR_SIGN}v := .Data.data -}}
          {{ ${DOLLAR_SIGN}k }} = {{ ${DOLLAR_SIGN}v }}
          {{ end }}
          {{- end -}}

    spec:
      serviceAccountName: $service_account_k8s

      containers:
      - name: main
        image: ghcr.io/fabianlee/spring-boot-web-with-spring-cloud-vault:1.0.0
        #image: docker.io/fabianlee/spring-boot-web-with-spring-cloud-vault:latest
        imagePullPolicy: Always
        resources:
          requests:
            memory: "128Mi"
          limits:
            memory: "256Mi"
        env:
        - name: JAVA_OPTS
          value: "-Xms:128m -Xmx:256m"
        # externalized variables used in Spring application.properties
        - name: VAULT_URI
          value: $vault_uri
        - name: VAULT_BACKEND
          value: $vault_backend
        - name: VAULT_CONTEXT
          value: $vault_context
        - name: VAULT_PROFILE
          value: $vault_profile
        - name: VAULT_ROLE
          value: $vault_role
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
