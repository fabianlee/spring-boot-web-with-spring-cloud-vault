#
# Used as template for sidecar injection with HashiCorp Vault for secret access
#
#export role=myrole
#export app=spring-boot-web-sidecar
#export namespace_k8s=vault
#export service_account_k8s=vault-auth
#export auth_path_vault=auth/kubernetes
#export path_secrets_vault=secret/webapp/config
#
# generate:
# cat tiny-tools.yaml | DOLLAR_SIGN='$' envsubst | kubectl apply -f -
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $app
  namespace: $namespace_k8s
  labels:
    app: $app
spec:
  selector:
    matchLabels:
      app: $app
  replicas: 1
  template:
    metadata:
      labels:
        app: $app
      annotations:
        #sidecar.istio.io/inject: "true"

        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/agent-init-first: 'false'
        vault.hashicorp.com/agent-cache-enable: 'true'
        vault.hashicorp.com/auth-type: 'kubernetes'
        vault.hashicorp.com/auth-config-path: '/var/run/secrets/kubernetes.io/serviceaccount/token'
        vault.hashicorp.com/remove-jwt-after-reading : 'false'
        vault.hashicorp.com/auth-path: $auth_path_vault
        vault.hashicorp.com/role: $role
        #vault.hashicorp.com/namespace: $namespace_vault # only available to Vault Enterprise

        # https://developer.hashicorp.com/vault/tutorials/kubernetes/kubernetes-sidecar#inject-secrets-into-the-pod
        vault.hashicorp.com/agent-inject-secret-mysecret.txt: $path_secrets_vault
        vault.hashicorp.com/agent-inject-template-mysecret.txt: |
          {{- with secret "$path_secrets_vault" -}}
          {{- range ${DOLLAR_SIGN}k, ${DOLLAR_SIGN}v := .Data.data -}}
          {{ ${DOLLAR_SIGN}k }} = {{ ${DOLLAR_SIGN}v }}
          {{ end }}
          {{- end -}}

    spec:
      serviceAccountName: $service_account_k8s

      containers:
      - name: main
        image: ghcr.io/fabianlee/spring-boot-with-vault-sidecar:1.0.0
        resources:
          requests:
            memory: "128Mi"
          limits:
            memory: "256Mi"
        env:
        - name: JAVA_OPTS
          value: "-Xms:128m -Xmx:256m"
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
